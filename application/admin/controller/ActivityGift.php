<?php
/**
 * [充换管理]
 * @author pc
 */
namespace app\admin\controller;
use library\XunSearch;
use library\Response;
use app\common\model\GiftActivity;
use app\common\model\Merchants;
use app\common\model\GiftCode;
use think\Db;

class ActivityGift extends Base{
    protected $merchantsList;

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $merchantsModel = new Merchants();
        $merchantsList = $merchantsModel->fetchList(array(),0,100);
        $this->merchantsList = array_column($merchantsList,'platform','id');
        $this->assign('merchantsList',$this->merchantsList);
    }

    //列表
    public function list_view(){
        if($this->request->isPost()){
            $this->request->filter(['strip_tags', 'htmlspecialchars']);
            $xunSearch = new XunSearch();
            $keywords   = $this->request->post('keywords');
            $ids = $xunSearch ->searchActivityGift($keywords);
            $status   = $this->request->post('status');
            $merchants_id   = $this->request->post('merchants_id');
            $page      = (int)$this->request->post('page', 0);
            $limit      = (int)$this->request->post('limit', 0);
            $offset = empty($page)?0:($page-1)*$limit;

            $giftActivityModel = new GiftActivity();
            $condition = array();

            if(!empty($keywords)){
                $condition['id'] = array('in',$ids);
            }

            if(isset($status) && $status>=0){
                $condition['status'] = $status;
            }

            if(isset($merchants_id) && $merchants_id>=0){
                $condition['merchants_id'] = $merchants_id;
            }

            $count = $giftActivityModel->fetchCount($condition);
            $list  = array();
            if ( 0 < $count ) {
                $list = $giftActivityModel->fetchList($condition,$offset,$limit);
                foreach ($list as &$value){
                    $value['merchants_id'] = $this->merchantsList[$value['merchants_id']];
                }
            }
            Response::Json(0,"请求成功",$count,$list);
        }
        return $this->view->fetch();
    }

    //添加
    public function add(){
        if($this->request->isPost()){
            $data['title'] = trim($this->request->post('title'));
            $data['merchants_id'] = (int)$this->request->post('merchants_id');
            $data['status'] = (int)$this->request->post('status');

            if(mb_strlen($data['title'],'utf-8')>10){
                $this->error('名称不可超过10个汉字');
            }

            $giftActivityModel = new GiftActivity();
            //验证账号是否唯一
            if($giftActivityModel->fetchCount(array('title'=>$data['title']))){
                $this->error('名称已存在');
            }
            $data['create_time'] = time();
            $id = $giftActivityModel->insertGetId($data);
            if($id<=0){
                $this->error('添加失败');
            }
            $this->success('添加成功');
        }
        return $this->view->fetch();
    }

    //编辑
    public function edit(){
        $id = (int)$this->request->param('id');
        if($this->request->isPost()){
            $data['title'] = trim($this->request->post('title'));
            $data['merchants_id'] = (int)$this->request->post('merchants_id');
            $data['status'] = (int)$this->request->post('status');

            if(mb_strlen($data['title'],'utf-8')>10){
                $this->error('名称不可超过10个汉字');
            }
            $giftActivityModel = new GiftActivity();
            $res = $giftActivityModel->update($data,array('id'=>$id));
            if(false === $res){
                $this->error('更新失败');
            }
            $this->success('更新成功');
        }
        $giftActivityModel = new GiftActivity();
        $info = $giftActivityModel->getDetail(array('id'=>$id));
        $this->assign('info',$info);
        return $this->view->fetch();
    }

    //批量处理
    public function batch_check(){
        if($this->request->isPost()){
            $ids = $this->request->param('ids/a');
            $status = (int)$this->request->param('check');
            $giftActivityModel = new GiftActivity();
            $res = $giftActivityModel->update(array('status'=>$status),array('id'=>array('in',$ids)));
            if(false === $res){
                $this->error('更新失败');
            }
            $this->success('更新成功');
        }
        return $this->view->fetch();
    }

    //子券详情
    public function detail(){
        $id = $this->request->param('id');
        if($this->request->isAjax()){
            $status   = 1;
            $page      = (int)$this->request->post('page', 0);
            $limit      = (int)$this->request->post('limit', 0);
            $offset = empty($page)?0:($page-1)*$limit;

            $giftCodeModel = new GiftCode();
            $condition = array();
            $condition['gid'] = $id;
            if(isset($status) && $status>=0){
                $condition['status'] = $status;
            }

            $count = $giftCodeModel->fetchCount($condition);
            $list  = array();
            if ( 0 < $count ) {
                $list = $giftCodeModel->fetchList($condition,$offset,$limit);
            }
            Response::Json(0,"请求成功",$count,$list);
        }
        $this->assign('id',$id);
        return $this->view->fetch();
    }


    //后台发放
    public function push(){
        $id = $this->request->param('id');
        $giftActivityModel = new GiftActivity();
        $info = $giftActivityModel->getDetail(array('id'=>$id));
        if($this->request->isPost()){
            if($info['total_num']-$info['obtain_num']<=0){
                $this->error('充换券数量不足');
            }
            $content = trim($this->request->param('content'));
            if(empty($content)){
                $this->error('请输入用户id');
            }
            $user_ids = explode(PHP_EOL,$content);
            $user_ids = array_unique($user_ids);
            if($info['total_num']-$info['obtain_num']<count($user_ids)){
                $this->error('发放的数量超限');
            }
            $giftCodeModel = new GiftCode();
            $res = false;
            foreach ($user_ids as $value){
                Db::startTrans();
                //查询一个充换码
                $giftCode = $giftCodeModel->getDetail(array('gid'=>$id,'status'=>0));
                if(empty($giftCode)){
                    Db::rollback();
                }
                $update = $giftCodeModel->update(array('user_id'=>$value,'update_time'=>time(),'status'=>1),array('gid'=>$id,'id'=>$giftCode['id']));
                if(false === $update){
                    Db::rollback();
                }
                $is_update = $giftActivityModel->where(array('id'=>$id))->setInc('obtain_num',1);
                if(false === $is_update){
                    Db::rollback();
                }
                Db::commit();
                $res = true;
            }
            if($res){
                $this->success('发放成功');
            }else{
                $this->error('发放失败');
            }
        }
        $this->assign('info',$info);
        return $this->view->fetch();
    }

    //批量导入
    public  function export(){
        $id = $this->request->param('id');
        $giftActivityModel = new GiftActivity();
        $info = $giftActivityModel->getDetail(array('id'=>$id));
        if($this->request->isPost()){
            $content = trim($this->request->param('content'));
            if(empty($content)){
                $this->error('请输入充换码');
            }
            $numbers = explode(PHP_EOL,$content);
            $numbers = array_unique($numbers);
            $giftCodeModel = new GiftCode();
            $data = array();
            foreach ($numbers as $value){
                $t = array();
                $t['number'] = $value;
                $t['gid'] = $id;
                $data[] = $t;
            }
            Db::startTrans();
            $insert = $giftCodeModel->insertAll($data);
            if(!$insert){
                Db::rollback();
                $this->error('导入失败');
            }

            $update = $giftActivityModel->where(array('id'=>$id))->setInc('total_num',count($data));
            if(false === $update){
                Db::rollback();
                $this->error('导入失败');
            }
            Db::commit();
            $this->success('导入成功');
        }
        $this->assign('info',$info);
        return $this->view->fetch();
    }


    //ajax获取充换码活动
    public function ajaxCodeList(){
        if($this->request->isPost()){
            $giftActivityModel = new GiftActivity();
            $list = $giftActivityModel->fetchList(array('status'=>1),0,100);
            if(empty($list)){
                $this->error('没有充换活动');
            }
            $this->success('请求成功','',$list);
        }
    }

}